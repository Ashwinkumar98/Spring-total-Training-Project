package com.cts.crud.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.cts.crud.EmployeeService.EmployeeService;
import com.cts.crud.model.Department;
import com.cts.crud.model.Employee;


@Controller
public class EmployeeController {
	public final static int SAVED=1;
	public final static int DELETED=2;
	
	@Autowired
	private EmployeeService service;
	
	public void populateDept(Model m)
	{
		m.addAttribute("depts", Department.values());
	}
	
	@GetMapping("/emps")
	public ModelAndView getEmployees()
	{
		return new ModelAndView("Employees","emplist",service.findAll());
	}
	
	@GetMapping("/newEmp")
	public ModelAndView newEmpFrom(@RequestParam(name="id" ,required = false,defaultValue="-1") Long id)
	{
		if(id!=-1)
		{
			return new ModelAndView("empForm","emp",service.findById(id));
		}
	
		return new ModelAndView("empForm","emp",new Employee()); 
	}
	
	@PostMapping("/newEmp")
	public ModelAndView addEmployeeData(@Valid @ModelAttribute(name="emp") Employee e,BindingResult res)
	{
		ModelAndView mv;
		
		if(res.hasErrors())
		{
			System.out.println(res.getAllErrors());
			mv=new ModelAndView("empForm","emp",e);
		}
		else
		{
			System.out.println("12342315124524     " +e);
			e=service.save(e);
			long empId = e.getEmpId();
			mv=new ModelAndView("redirect:/home?id="+empId+"&msgCode="+SAVED);
		}
		return mv;
	}
	
	@GetMapping("/{id}")
	public ModelAndView details(@PathVariable Long id)
	{
		ModelAndView mv=null;
		
		
		mv=new ModelAndView("empdetails","emp",service.findById(id));
		
		
		return mv;
	}
	
	@RequestMapping("/deleteEmp/{id}")
	public ModelAndView deleteEmp(@PathVariable Long id)
	{
		ModelAndView mv;
		service.deleteById(id);
		mv=new ModelAndView("redirect:/home?id="+id+"&msgCode="+DELETED);
		return mv;
	}
	
	@RequestMapping("/editEmp/{id}")
	public ModelAndView editEmp(@PathVariable Long id)
	{
		ModelAndView mv;
		mv=new ModelAndView("redirect:/newEmp?id="+id);
		return mv;
	}
	
	
	
}
